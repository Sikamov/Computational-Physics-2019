# Интерполяция методом Лагранжа
# 1.Функция (которой подается набор точек) выдает значение ординату по абциссе
def lagrange(a, x, y):
    b = 0
    l = []
    for i in range(len(x)):
        l.append(1)
        for k in range(len(x)):
            if i != k:
                l[i] = l[i] * (a - x[k]) / (x[i] - x[k])
        b = b + y[i] * l[i]
    return b


# 2.Получим "истинный" набор точек для функции y=1/(1+x^2)
y = []
x = []
a=-1    #левая граница интервала
b=1     #правая граница интервала
c=b-a   #ширина интервала
n = 10  #кол-во точек интерполяционного мн-на на интервале и кол-во-1 точек истинного графика 
w=c/2/n #шаг между точками
r = 0
for i in range(n + 1):
    x.append(0)
    y.append(0)
for k in range(-n, n + 1):
    if k % 2 == 0: #берем четные что бы отсеить нечетные (для интерполяционного мн-на)
        x[r] = x[r] + w * (k)
        y[r] = 1 / (1 + x[r] ** 2)
        r = r + 1

# 3.Имея набор точек (x,y) по ним получим набор точек(s,t) для интерполяционного многочлена
t = []
s = []
r = 0
for i in range(n):
    t.append(0)
    s.append(0)
for k in range(-n, n + 1):
    if k % 2 != 0: #выбираем только нечетные точки, что бы они не совпадали с истинными
        s[r] = s[r] + w * (k)
        t[r] = lagrange(s[r], x, y)
        r = r + 1

#4.Строим графики y(x) и t(s) по полученным наборам точек (x,y) и (t,s) 
import matplotlib.pyplot as plt
plt.plot(x,y,'o') #истинный график
plt.plot(s,t,'o') #интерполяционный многочлен
plt.legend(("Истинный", "Интерполяция"))
plt.show()        

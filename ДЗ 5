#Решение СЛАУ с трехдиагональной матрицей: ax=b
import numpy as np
import random as rnd
import numpy.random
    
#Создаем матрицу
def matrix(n):
    a = np.zeros((n, n))
    for i in range(n-1):
        a[i][i]=rnd.randint(1,10)
        a[i+1][i]=rnd.randint(1,10)
        a[i][i+1]=rnd.randint(1,10)
    a[n-1][n-1]=rnd.randint(1,10)  
    return a

#Входные условия
n=10 #размер матрицы 
a=matrix(n)
b=np.zeros(n)
for i in range(n):
    b[i]=rnd.randint(1,10)
x=np.zeros(n)
b=b.reshape(n, 1)
print('b=')
print(b)
print('a=')
print(a)

#Прямая прогонка
for i in range(n-1):
    b[i+1]=b[i+1]-b[i]*a[i+1][i]/a[i][i]
    a[i+1][i+1]=a[i+1][i+1]-a[i][i+1]*a[i+1][i]/a[i][i]
    a[i+1][i]=0

#Обратная прогонка
x[n-1]=b[n-1]/a[n-1][n-1]
for k in range (2,n+1):
    x[n-k]=(b[n-k]-x[n-k+1]*a[n-k][n-k+1])/a[n-k][n-k]   
x=x.reshape(n, 1)
print('Ответ: ') 
print('x=')
print(x)
                  
                    
'''Пример работы программы:
b=
[[ 2.]
 [ 4.]
 [ 6.]
 [ 1.]
 [ 1.]
 [ 5.]
 [ 5.]
 [ 5.]
 [ 7.]
 [10.]]
a=
[[ 4. 10.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 7.  4. 10.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  2.  6.  7.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  6.  4.  2.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  6.  8.  6.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  1.  3. 10.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  5.  4.  5.  0.  0.]
 [ 0.  0.  0.  0.  0.  0. 10.  2.  5.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  2. 10. 10.]
 [ 0.  0.  0.  0.  0.  0.  0.  0. 10.  8.]]
Ответ: 
x=
[[-0.32501458]
 [ 0.33000583]
 [ 0.49550788]
 [ 0.33813444]
 [-1.66279251]
 [ 2.0455889 ]
 [ 0.05260258]
 [-1.08767097]
 [ 1.32986323]
 [-0.41232903]]  '''

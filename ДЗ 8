#Решение диффура: x"+w**2*x+k*x**3=0
import matplotlib.pyplot as plt
import numpy as np
def f(t,x):
    f=-w**2*x-k*x**3
    return f
# шаг
h = 0.001
tn=10
n=round(tn/h)
w=1
k=5
x=np.zeros(n)
x1=np.zeros(n)
t=np.arange(0,tn,h)
v=np.zeros(n)
v1=np.zeros(n)
E=np.zeros(n)
E1=np.zeros(n)
# начальные условия
x[0]=0
x1[0]=0
v[0]=1
v1[0]=1
#Явный метод Эйлера
for i in range(n-1):
    v[i+1]=v[i]+h*(f(t[i],x[i]))
    x[i+1]=x[i]+h*v[i]
#Метод Рунге-Кутта 
for i in range(n-1):
    v1[i+1]=v1[i]+h*(f(t[i]+h/2,x1[i]+h/2*f(t[i],x1[i])))
    x1[i+1]=x1[i]+h*v1[i]
#Энергия E=v**2/2+w**2*x**2/2+k*x**4/4 (полученно из анализа уравнения Лагранжа)
for i in range(n-1):
    E[i+1]=v[i+1]**2/2+w**2*x[i+1]**2/2+k*x[i+1]**4/4
    E1[i+1]=v1[i+1]**2/2+w**2*x1[i+1]**2/2+k*x1[i+1]**4/4
E[0]=v[0]**2/2+w**2*x[0]**2/2+k*x[0]**4/4
E1[0]=v1[0]**2/2+w**2*x1[0]**2/2+k*x1[0]**4/4 
plt.rc('font',**{'family':'verdana'})
plt.xlabel("t")
plt.ylabel("x")
plt.plot(t, x, "b-", label="явный метод Эйлера")
plt.plot(t, x1, "g-", label="метод Рунге-Кутта")
plt.legend()
plt.grid()
plt.show()
plt.xlabel("t")
plt.ylabel("E")
plt.plot(t, E, "b-", label="явный метод энергия")
plt.plot(t, E1, "g-", label="метод Рунге-Кутта")
plt.legend()
plt.grid()
plt.show()
